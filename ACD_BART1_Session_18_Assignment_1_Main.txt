Data Analytics




         SESSION 18: Segmentation
                 Analysis
                 Assignment 1




                                    1
Data Analytics


Table of Contents
1.Introduction ............................................................................................................................................... 3
2.Objective .................................................................................................................................................... 3
3.Prerequisites .............................................................................................................................................. 3
4.Associated Data Files ................................................................................................................................. 3
5.Problem Statement .................................................................................................................................... 3
6.Expected Output ........................................................................................................................................ 3
7.Approximate Time to Complete Task ........................................................................................................ 3




                                                                                                                                                               2
Data Analytics




1. Introduction
This assignment will help you understand the concepts learnt in the session.

2. Objective
This assignment will test your skills.

3. Prerequisites
Not applicable.

4. Associated Data Files
Not applicable.

5. Problem Statement
   1. Use the below given data set
   DataSet: weight_lifting_exercises.csv
   PATH:DATA-ANALYTICS-WITH-R-EXCEL-TABLEAU_Session18Assignment18.1/weight_lifting_exercises.csv
   > View(weight_lifting_exercises)

> str(weight_lifting_exercises)
'data.frame':	4024 obs. of  59 variables:
 $ user_name           : Factor w/ 5 levels "adelmo","carlitos",..: 3 3 3 3 3 3 3 3 3 3 ...
 $ raw_timestamp_part_1: int  1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 ...
 $ raw_timestamp_part_2: int  34670 62641 70653 82654 90637 170626 190665 242723 267551 274689 ...
 $ cvtd_timestamp      : Factor w/ 7 levels "2/12/2011 13:35",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ new_window          : Factor w/ 2 levels "no","yes": 1 1 1 1 1 1 1 1 1 1 ...
 $ num_window          : int  1 1 1 1 1 1 1 1 1 1 ...
 $ roll_belt           : num  3.7 3.66 3.58 3.56 3.57 3.45 3.31 2.91 2.31 2 ...
 $ pitch_belt          : num  41.6 42.8 43.7 44.4 45.1 45.6 46.2 46.9 47.4 47.7 ...
 $ yaw_belt            : num  -82.8 -82.5 -82.3 -82.1 -81.9 -81.9 -81.9 -82.2 -82.6 -82.8 ...
 $ total_accel_belt    : int  3 2 1 1 1 1 3 4 2 3 ...
 $ gyros_belt_x        : num  2.02 1.96 1.88 1.8 1.77 1.75 1.78 1.75 1.65 1.48 ...
 $ gyros_belt_y        : num  0.18 0.14 0.08 0.03 0 -0.03 -0.06 -0.06 -0.03 -0.06 ...
 $ gyros_belt_z        : num  0.02 0.05 0.05 0.08 0.13 0.16 0.15 0.23 0.33 0.21 ...
 $ accel_belt_x        : int  -3 -2 -2 -6 -4 1 1 2 -1 -18 ...
 $ accel_belt_y        : int  -18 -13 -6 -5 -9 -9 -24 -36 -19 18 ...
 $ accel_belt_z        : int  22 16 8 7 0 -5 -8 -9 -7 1 ...
 $ magnet_belt_x       : int  387 405 409 422 418 432 438 440 443 449 ...
 $ magnet_belt_y       : int  525 512 511 513 508 510 508 503 507 499 ...
 $ magnet_belt_z       : int  -267 -254 -244 -221 -208 -189 -176 -163 -140 -132 ...
 $ roll_arm            : num  132 129 125 120 115 110 104 98.6 93.2 88.5 ...
 $ pitch_arm           : num  -43.7 -45.3 -46.8 -48.1 -49.1 -49.6 -49.9 -49.7 -49 -48.1 ...
 $ yaw_arm             : num  -53.6 -49 -43.7 -38.1 -31.7 -25.8 -18.5 -11.4 -4.49 1.82 ...
 $ total_accel_arm     : int  38 38 35 35 34 33 29 28 27 22 ...
 $ gyros_arm_x         : num  2.65 2.79 2.91 3.08 3.2 3.31 3.5 3.53 3.4 3.48 ...
 $ gyros_arm_y         : num  -0.61 -0.64 -0.69 -0.72 -0.77 -0.83 -0.83 -0.83 -0.83 -0.8 ...
 $ gyros_arm_z         : num  -0.02 -0.11 -0.15 -0.23 -0.25 -0.3 -0.31 -0.21 -0.11 -0.15 ...
 $ accel_arm_x         : int  143 146 156 158 163 160 165 153 143 135 ...
 $ accel_arm_y         : int  30 35 44 52 55 59 67 70 78 96 ...
 $ accel_arm_z         : int  -346 -339 -307 -305 -288 -274 -225 -218 -205 -134 ...
 $ magnet_arm_x        : int  556 599 613 646 670 696 721 725 740 741 ...
 $ magnet_arm_y        : int  -205 -206 -198 -186 -175 -174 -161 -152 -133 -115 ...
 $ magnet_arm_z        : int  -374 -335 -319 -268 -241 -193 -121 -105 -43 14 ...
 $ roll_dumbbell       : num  51.2 55.8 55.5 55.9 55.2 ...
 $ pitch_dumbbell      : num  11.7 9.65 6.88 11.08 11.43 ...
 $ yaw_dumbbell        : num  104.3 100.2 101.1 99.8 100.4 ...
 $ total_accel_dumbbell: int  4 4 4 5 4 4 4 4 4 4 ...
 $ gyros_dumbbell_x    : num  -0.31 -0.31 -0.31 -0.31 -0.31 -0.31 -0.29 -0.29 -0.29 -0.29 ...
 $ gyros_dumbbell_y    : num  0.16 0.14 0.16 0.16 0.14 0.14 0.14 0.14 0.14 0.14 ...
 $ gyros_dumbbell_z    : num  0.08 0.07 0.05 0.07 0.07 0.07 0.07 0.07 0.08 0.07 ...
 $ accel_dumbbell_x    : int  5 4 3 5 5 6 6 3 6 5 ...
 $ accel_dumbbell_y    : int  21 22 23 24 23 22 22 23 22 21 ...
 $ accel_dumbbell_z    : int  37 35 37 38 37 36 35 35 36 34 ...
 $ magnet_dumbbell_x   : int  -471 -472 -468 -469 -468 -473 -471 -476 -474 -470 ...
 $ magnet_dumbbell_y   : int  191 184 190 184 189 188 183 184 186 188 ...
 $ magnet_dumbbell_z   : int  277 281 275 285 292 278 284 283 278 283 ...
 $ roll_forearm        : num  -111 -112 -114 -115 -117 -118 -120 -122 -124 -126 ...
 $ pitch_forearm       : num  26.5 26.2 26 25.8 25.5 25.1 24.8 24.5 24 23.4 ...
 $ yaw_forearm         : num  138 138 137 137 137 137 136 135 135 134 ...
 $ total_accel_forearm : int  30 31 32 33 34 36 37 37 38 39 ...
 $ gyros_forearm_x     : num  -0.05 -0.06 -0.05 0.02 0.08 0.14 0.21 0.27 0.37 0.43 ...
 $ gyros_forearm_y     : num  -0.37 -0.37 -0.27 -0.24 -0.27 -0.29 -0.24 -0.18 -0.21 -0.26 ...
 $ gyros_forearm_z     : num  -0.43 -0.59 -0.72 -0.79 -0.82 -0.82 -0.84 -0.85 -0.87 -0.89 ...
 $ accel_forearm_x     : int  -170 -178 -182 -185 -188 -208 -215 -212 -221 -220 ...
 $ accel_forearm_y     : int  155 164 172 182 195 207 214 221 223 239 ...
 $ accel_forearm_z     : int  184 182 185 188 188 190 190 190 194 196 ...
 $ magnet_forearm_x    : int  -1160 -1150 -1130 -1120 -1100 -1090 -1060 -1060 -1040 -1020 ...
 $ magnet_forearm_y    : int  1400 1410 1400 1400 1400 1400 1410 1410 1400 1410 ...
 $ magnet_forearm_z    : int  -876 -871 -863 -855 -843 -838 -831 -829 -819 -804 ...
 $ classe              : Factor w/ 5 levels "A","B","C","D",..: 5 5 5 5 5 5 5 5 5 5 ...
> weight_lifting_exercises<-data.frame(weight_lifting_exercises[,-c(11:35,49:58,68:82,86:100,102:111,124:138,140:149)])
> str(weight_lifting_exercises)
'data.frame':	4024 obs. of  24 variables:
 $ user_name           : Factor w/ 5 levels "adelmo","carlitos",..: 3 3 3 3 3 3 3 3 3 3 ...
 $ raw_timestamp_part_1: int  1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 ...
 $ raw_timestamp_part_2: int  34670 62641 70653 82654 90637 170626 190665 242723 267551 274689 ...
 $ cvtd_timestamp      : Factor w/ 7 levels "2/12/2011 13:35",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ new_window          : Factor w/ 2 levels "no","yes": 1 1 1 1 1 1 1 1 1 1 ...
 $ num_window          : int  1 1 1 1 1 1 1 1 1 1 ...
 $ roll_belt           : num  3.7 3.66 3.58 3.56 3.57 3.45 3.31 2.91 2.31 2 ...
 $ pitch_belt          : num  41.6 42.8 43.7 44.4 45.1 45.6 46.2 46.9 47.4 47.7 ...
 $ yaw_belt            : num  -82.8 -82.5 -82.3 -82.1 -81.9 -81.9 -81.9 -82.2 -82.6 -82.8 ...
 $ total_accel_belt    : int  3 2 1 1 1 1 3 4 2 3 ...
 $ total_accel_dumbbell: int  4 4 4 5 4 4 4 4 4 4 ...
 $ gyros_dumbbell_x    : num  -0.31 -0.31 -0.31 -0.31 -0.31 -0.31 -0.29 -0.29 -0.29 -0.29 ...
 $ gyros_dumbbell_y    : num  0.16 0.14 0.16 0.16 0.14 0.14 0.14 0.14 0.14 0.14 ...
 $ gyros_dumbbell_z    : num  0.08 0.07 0.05 0.07 0.07 0.07 0.07 0.07 0.08 0.07 ...
 $ accel_dumbbell_x    : int  5 4 3 5 5 6 6 3 6 5 ...
 $ accel_dumbbell_y    : int  21 22 23 24 23 22 22 23 22 21 ...
 $ accel_dumbbell_z    : int  37 35 37 38 37 36 35 35 36 34 ...
 $ magnet_dumbbell_x   : int  -471 -472 -468 -469 -468 -473 -471 -476 -474 -470 ...
 $ magnet_dumbbell_y   : int  191 184 190 184 189 188 183 184 186 188 ...
 $ magnet_dumbbell_z   : int  277 281 275 285 292 278 284 283 278 283 ...
 $ roll_forearm        : num  -111 -112 -114 -115 -117 -118 -120 -122 -124 -126 ...
 $ pitch_forearm       : num  26.5 26.2 26 25.8 25.5 25.1 24.8 24.5 24 23.4 ...
 $ yaw_forearm         : num  138 138 137 137 137 137 136 135 135 134 ...
 $ classe              : Factor w/ 5 levels "A","B","C","D",..: 5 5 5 5 5 5 5 5 5 5 ...
> summary(weight_lifting_exercises)
    user_name    raw_timestamp_part_1 raw_timestamp_part_2          cvtd_timestamp new_window   num_window   
 adelmo  : 311   Min.   :1.322e+09    Min.   :   297       2/12/2011 13:35 : 311   no :3936   Min.   : 1.00  
 carlitos:1580   1st Qu.:1.323e+09    1st Qu.:244321       28/11/2011 14:15:  88   yes:  88   1st Qu.:24.00  
 eurico  :  88   Median :1.323e+09    Median :492342       30/11/2011 17:12:   4              Median :46.00  
 jeremy  :   4   Mean   :1.323e+09    Mean   :490377       5/12/2011 11:23 : 337              Mean   :46.33  
 pedro   :2041   3rd Qu.:1.323e+09    3rd Qu.:736278       5/12/2011 11:25 :1243              3rd Qu.:69.00  
                 Max.   :1.323e+09    Max.   :996453       5/12/2011 14:22 : 456              Max.   :91.00  
                                                           5/12/2011 14:23 :1585                             
   roll_belt        pitch_belt        yaw_belt        total_accel_belt total_accel_dumbbell gyros_dumbbell_x 
 Min.   :-28.90   Min.   :-56.20   Min.   :-179.000   Min.   : 0.00    Min.   : 1.00        Min.   :-1.4300  
 1st Qu.:  1.38   1st Qu.:  6.22   1st Qu.: -93.100   1st Qu.: 3.00    1st Qu.: 6.00        1st Qu.:-0.0200  
 Median :122.00   Median : 25.50   Median :  -4.940   Median :19.00    Median : 9.00        Median : 0.3200  
 Mean   : 73.31   Mean   : 14.16   Mean   : -30.975   Mean   :12.77    Mean   :12.02        Mean   : 0.2487  
 3rd Qu.:124.00   3rd Qu.: 26.40   3rd Qu.:  -2.695   3rd Qu.:20.00    3rd Qu.:14.00        3rd Qu.: 0.5300  
 Max.   :159.00   Max.   : 60.30   Max.   : 179.000   Max.   :26.00    Max.   :37.00        Max.   : 1.4800  
                                                                                                             
 gyros_dumbbell_y   gyros_dumbbell_z  accel_dumbbell_x   accel_dumbbell_y  accel_dumbbell_z  magnet_dumbbell_x
 Min.   :-2.04000   Min.   :-1.4600   Min.   :-237.000   Min.   :-163.00   Min.   :-273.00   Min.   :-638.00  
 1st Qu.:-0.27000   1st Qu.:-0.3300   1st Qu.:  -6.000   1st Qu.: -28.00   1st Qu.:  12.00   1st Qu.:-515.00  
 Median :-0.06000   Median :-0.1300   Median :  11.000   Median :  -2.00   Median :  51.00   Median : 107.50  
 Mean   :-0.04674   Mean   :-0.1337   Mean   :  -7.091   Mean   :  12.83   Mean   :  16.63   Mean   :  10.55  
 3rd Qu.: 0.14000   3rd Qu.: 0.0500   3rd Qu.:  23.000   3rd Qu.:  47.00   3rd Qu.:  79.00   3rd Qu.: 506.00  
 Max.   : 4.37000   Max.   : 1.8900   Max.   : 217.000   Max.   : 281.00   Max.   : 122.00   Max.   : 579.00  
                                                                                                              
 magnet_dumbbell_y magnet_dumbbell_z  roll_forearm    pitch_forearm     yaw_forearm      classe  
 Min.   :-730.0    Min.   :-262.00   Min.   :-180.0   Min.   :-64.00   Min.   :-180.00   A:1365  
 1st Qu.:-544.0    1st Qu.:-101.00   1st Qu.:-115.0   1st Qu.:  0.00   1st Qu.:-106.00   B: 901  
 Median :-486.0    Median : -59.00   Median :  89.5   Median : 19.70   Median :  83.50   C: 112  
 Mean   :-115.7    Mean   : -41.12   Mean   :  36.1   Mean   : 18.57   Mean   :  17.79   D: 276  
 3rd Qu.: 304.0    3rd Qu.:   1.00   3rd Qu.: 136.0   3rd Qu.: 43.90   3rd Qu.: 108.00   E:1370  
 Max.   : 618.0    Max.   : 300.00   Max.   : 180.0   Max.   : 86.90   Max.   : 180.00           
                                                                                                 
> weightTrain<-weight_lifting_exercises[1:2012,]
> weightTest<-weight_lifting_exercises[2013:4024,]
> summary(weightTrain)
    user_name    raw_timestamp_part_1 raw_timestamp_part_2          cvtd_timestamp new_window   num_window   
 adelmo  : 311   Min.   :1.322e+09    Min.   :   297       2/12/2011 13:35 : 311   no :1968   Min.   : 1.00  
 carlitos:1580   1st Qu.:1.323e+09    1st Qu.:248307       28/11/2011 14:15:  88   yes:  44   1st Qu.:13.00  
 eurico  :  88   Median :1.323e+09    Median :506326       30/11/2011 17:12:   4              Median :24.00  
 jeremy  :   4   Mean   :1.323e+09    Mean   :496537       5/12/2011 11:23 : 337              Mean   :24.18  
 pedro   :  29   3rd Qu.:1.323e+09    3rd Qu.:739164       5/12/2011 11:25 :1243              3rd Qu.:36.00  
                 Max.   :1.323e+09    Max.   :996389       5/12/2011 14:22 :  29              Max.   :46.00  
                                                           5/12/2011 14:23 :   0                             
   roll_belt          pitch_belt         yaw_belt       total_accel_belt total_accel_dumbbell gyros_dumbbell_x  
 Min.   :-28.9000   Min.   :-56.200   Min.   :-179.00   Min.   : 0.000   Min.   : 1.00        Min.   :-1.43000  
 1st Qu.: -0.2525   1st Qu.:  4.160   1st Qu.: -93.60   1st Qu.: 3.000   1st Qu.: 4.00        1st Qu.:-0.18000  
 Median :  1.3800   Median :  6.220   Median : -93.10   Median : 3.000   Median :10.00        Median : 0.00000  
 Mean   : 23.1808   Mean   :  1.873   Mean   : -58.84   Mean   : 5.904   Mean   :14.36        Mean   : 0.02834  
 3rd Qu.:  7.7325   3rd Qu.:  7.420   3rd Qu.: -91.50   3rd Qu.: 5.000   3rd Qu.:21.00        3rd Qu.: 0.21000  
 Max.   :159.0000   Max.   : 60.300   Max.   : 179.00   Max.   :26.000   Max.   :37.00        Max.   : 1.48000  
                                                                                                                
 gyros_dumbbell_y   gyros_dumbbell_z   accel_dumbbell_x  accel_dumbbell_y accel_dumbbell_z  magnet_dumbbell_x
 Min.   :-2.04000   Min.   :-1.00000   Min.   :-237.00   Min.   :-80.00   Min.   :-273.00   Min.   :-638.0   
 1st Qu.:-0.31000   1st Qu.:-0.16000   1st Qu.: -22.00   1st Qu.: 10.00   1st Qu.: -87.25   1st Qu.:-558.0   
 Median :-0.02000   Median :-0.02000   Median :   3.00   Median : 47.00   Median :  12.00   Median :-515.0   
 Mean   : 0.01031   Mean   :-0.01554   Mean   : -20.64   Mean   : 59.51   Mean   : -40.81   Mean   :-428.8   
 3rd Qu.: 0.27500   3rd Qu.: 0.10000   3rd Qu.:  20.00   3rd Qu.:104.00   3rd Qu.:  36.00   3rd Qu.:-377.0   
 Max.   : 4.37000   Max.   : 1.89000   Max.   : 217.00   Max.   :281.00   Max.   : 101.00   Max.   : 499.0   
                                                                                                             
 magnet_dumbbell_y magnet_dumbbell_z  roll_forearm     pitch_forearm      yaw_forearm       classe  
 Min.   :-571.0    Min.   :-185.00   Min.   :-180.00   Min.   :-64.000   Min.   :-180.000   A: 366  
 1st Qu.: 263.0    1st Qu.: -53.00   1st Qu.:-137.00   1st Qu.:  0.000   1st Qu.:-130.000   B:   0  
 Median : 304.0    Median :   1.00   Median :  22.20   Median : 11.500   Median :   0.000   C:   0  
 Mean   : 338.7    Mean   :  21.27   Mean   :  15.69   Mean   :  7.721   Mean   :  -6.966   D: 276  
 3rd Qu.: 445.2    3rd Qu.:  82.00   3rd Qu.: 140.00   3rd Qu.: 37.325   3rd Qu.: 109.250   E:1370  
 Max.   : 618.0    Max.   : 300.00   Max.   : 180.00   Max.   : 61.100   Max.   : 180.000           
                                                                                                    
> names(weightTrain)
 [1] "user_name"            "raw_timestamp_part_1" "raw_timestamp_part_2" "cvtd_timestamp"       "new_window"          
 [6] "num_window"           "roll_belt"            "pitch_belt"           "yaw_belt"             "total_accel_belt"    
[11] "total_accel_dumbbell" "gyros_dumbbell_x"     "gyros_dumbbell_y"     "gyros_dumbbell_z"     "accel_dumbbell_x"    
[16] "accel_dumbbell_y"     "accel_dumbbell_z"     "magnet_dumbbell_x"    "magnet_dumbbell_y"    "magnet_dumbbell_z"   
[21] "roll_forearm"         "pitch_forearm"        "yaw_forearm"          "classe"              
> 

   2. Perform the below given activities:
   a. Create classification model using different decision trees.
   Answer: 
   > weightTrain<-data.frame(weightTrain[,-c(11:35,49:58,68:82,86:100,102:111,124:138,140:149)])
> library(caret)
> library(Hmisc)
> weightTrain$raw_timestamp_part_1<-impute(weightTrain$raw_timestamp_part_1,mean)
> weightTrain$raw_timestamp_part_2<-impute(weightTrain$raw_timestamp_part_2,mean)
> weightTrain$cvtd_timestamp<-impute(weightTrain$cvtd_timestamp,mean)
> weightTrain$new_window<-impute(weightTrain$new_window,mean)
> weightTrain$num_window<-impute(weightTrain$num_window,mean)
> weightTrain$roll_belt<-impute(weightTrain$roll_belt,mean)
> weightTrain$pitch_belt<-impute(weightTrain$pitch_belt,mean)
> weightTrain$yaw_belt<-impute(weightTrain$yaw_belt,mean)
> summary(weightTrain)
    user_name    raw_timestamp_part_1 raw_timestamp_part_2 cvtd_timestamp    new_window      num_window      roll_belt       
 adelmo  : 311   Min.   :1.322e+09    Min.   :   297       Min.   :1.000   Min.   :1.000   Min.   : 1.00   Min.   :-28.9000  
 carlitos:1580   1st Qu.:1.323e+09    1st Qu.:248307       1st Qu.:4.000   1st Qu.:1.000   1st Qu.:13.00   1st Qu.: -0.2525  
 eurico  :  88   Median :1.323e+09    Median :506326       Median :5.000   Median :1.000   Median :24.00   Median :  1.3800  
 jeremy  :   4   Mean   :1.323e+09    Mean   :496537       Mean   :4.093   Mean   :1.022   Mean   :24.18   Mean   : 23.1808  
 pedro   :  29   3rd Qu.:1.323e+09    3rd Qu.:739164       3rd Qu.:5.000   3rd Qu.:1.000   3rd Qu.:36.00   3rd Qu.:  7.7325  
                 Max.   :1.323e+09    Max.   :996389       Max.   :6.000   Max.   :2.000   Max.   :46.00   Max.   :159.0000  
   pitch_belt         yaw_belt       total_accel_belt
 Min.   :-56.200   Min.   :-179.00   Min.   : 0.000  
 1st Qu.:  4.160   1st Qu.: -93.60   1st Qu.: 3.000  
 Median :  6.220   Median : -93.10   Median : 3.000  
 Mean   :  1.873   Mean   : -58.84   Mean   : 5.904  
 3rd Qu.:  7.420   3rd Qu.: -91.50   3rd Qu.: 5.000  
 Max.   : 60.300   Max.   : 179.00   Max.   :26.000  
> str(weightTrain)
'data.frame':	2012 obs. of  10 variables:
 $ user_name           : Factor w/ 5 levels "adelmo","carlitos",..: 3 3 3 3 3 3 3 3 3 3 ...
 $ raw_timestamp_part_1: int  1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 1322489729 ...
 $ raw_timestamp_part_2: int  34670 62641 70653 82654 90637 170626 190665 242723 267551 274689 ...
 $ cvtd_timestamp      : int  2 2 2 2 2 2 2 2 2 2 ...
 $ new_window          : int  1 1 1 1 1 1 1 1 1 1 ...
 $ num_window          : int  1 1 1 1 1 1 1 1 1 1 ...
 $ roll_belt           : num  3.7 3.66 3.58 3.56 3.57 3.45 3.31 2.91 2.31 2 ...
 $ pitch_belt          : num  41.6 42.8 43.7 44.4 45.1 45.6 46.2 46.9 47.4 47.7 ...
 $ yaw_belt            : num  -82.8 -82.5 -82.3 -82.1 -81.9 -81.9 -81.9 -82.2 -82.6 -82.8 ...
 $ total_accel_belt    : int  3 2 1 1 1 1 3 4 2 3 ...
> 
> weightTrain$cvtd_timestamp<-as.integer(weightTrain$cvtd_timestamp)
> weightTrain$new_window<-as.integer(weightTrain$new_window)
> library(tree)
> 
> tree<- tree(classe~. , 
+            data = weightTrain)
> plot(tree,pretty = 0.1)
> text(tree,pretty = 1.2)
> summary(tree)

> library(caret)
> pred <- predict(tree,weightTrain,type='class')

> str(pred)
 Named num [1:10] 0.125 1 1 0.571 0.125 ...
 - attr(*, "names")= chr [1:10] "4" "6" "7" "13" ...
> dim(pred)
NULL
> dim(weightTest$classe)
NULL
>
> weightTest$classe<-as.factor(weightTest$classe)
> dim(weightTest$classe)
NULL
> table(weightTest$classe,pred)
> length(pred)
[1] 10
> length(weightTest$classe)
[1] 2012
> confusionMatrix(pred,weightTest$classe)

> install.packages("rpart")
> library(rpart)
> fit1 <- rpart(classe~.,data=weightTrain[,-1]) 
> class(fit1)
> summary(fit1)

> rpart.plot::rpart.plot(fit1)

> pred1<-predict(fit1,weightTrain,type = "class")
> summary(pred1)
> dim(pred1)
> weightTest$classe<-as.factor(weightTest$classe)
> table(weightTest$classe,pred1)
> confusionMatrix(weightTest$classe,pred1)

b. Verify model goodness of fit.
Answer:
#........for pred....
> weightTest$classe<-as.factor(weightTest$classe)
> dim(weightTest$classe)
NULL
> table(weightTest$classe,pred)
> length(pred)
[1] 10
> length(weightTest$classe)
[1] 2012
> confusionMatrix(pred,weightTest$classe)
>
#...for fit1....
> weightTest$classe<-as.factor(weightTest$classe)
> table(weightTest$classe,pred1)
> confusionMatrix(weightTest$classe,pred1)


c. Apply all the model validation techniques.
Answer: 
set.seed(3)
cv.weight<-cv.tree(tree,FUN = prune.misclass)    #cv->cross validation

names(cv.weight)
cv.weight

par(mfrow = c(1,2))
plot(cv.weight$size,cv.weight$dev,type = 'b',col = 'red')

prune.weight<-prune.misclass(tree,best = 9)
plot(prune.weight)
text(prune.weight,pretty = 0)

weightTrain$cvtd_timestamp<-as.integer(weightTrain$cvtd_timestamp)
weightTrain$new_window<-as.integer(weightTrain$new_window)
tree.pred1<-predict(prune.weight,weightTrain,type = 'class')
table(tree.pred1,weightTest)



#............Random forest.........

set.seed(1)
library(randomForest)
a.weight_lifting_exercises<-randomForest(classe~.,weight_lifting_exercises,
                                         subset = train,mtry = 3,importance = TRUE)
rf.Carseats<-randomForest(High~. -Sales,Carseats,subset = train,mtry = 3,importance = TRUE)
dim(Carseats)
importance(a.weight_lifting_exercises)

varImpPlot(a.weight_lifting_exercises,col = 'blue',pch = 10, cex = 1.25)

a.weight_lifting_exercises

test.pred.rf<-predict(a.weight_lifting_exercises, newdata = weight_lifting_exercises[-weightTrain,],type = 'class')
table(test.pred.rf,weightTest)


#.........adaboost..........

library(adabag)
set.seed(300)
weight_lifting_exercises$classe<-as.character(weight_lifting_exercises$classe)
weight_adaboost<-boosting(classes~.,data = weight_lifting_exercises)

p.weight_adaboost<-predict(weight_adaboost,weight_lifting_exercises)
head(p.weight_adaboost)
head(p.weight_adaboost$class)
p.weight_adaboost$confusion
set.seed(300)
car_adaboost_cv<-boosting.cv(classe,data = weight_lifting_exercises)
car_adaboost_cv$confusion

d. Make conclusions
#adaboost is best techniques which gives better results with more accuracy.

                                                                               3
Data Analytics

6. Expected Output
N/A

7. Approximate Time to Complete Task

30 mins.




                                       4

